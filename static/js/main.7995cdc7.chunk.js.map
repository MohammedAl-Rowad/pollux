{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","components/generate/components/Controller/components/AddModelBtn.js","components/generate/components/Controller/components/ModelsComponents/ConfirmDel.js","colors.js","components/generate/components/Controller/components/ModelsComponents/AddProp.js","components/generate/components/Controller/components/ModelsComponents/Prop.js","components/generate/components/Controller/components/ModelsComponents/PropsDisplay.js","components/generate/components/Controller/components/ModelsComponents/Model.js","components/generate/components/Controller/components/Models.js","components/generate/components/Controller/components/SaveModel.js","components/generate/components/Controller/components/LoadModel.js","components/generate/components/Controller/Controller.js","components/generate/Generate.js","components/Header.js","components/Content.js","components/Footer.js","App.js","serviceWorker.js","redux/reducers/models.reducer.js","redux/reducers/faker.reducer.js","redux/reducers/prop.reducer.js","redux/reducers/index.js","redux/store.js","index.js","components/generate/components/Controller/components/empty.svg","components/generate/components/Controller/components/ModelsComponents/cat.svg","components/generate/components/Controller/components/emptySave.svg","components/generate/components/Controller/components/loadModels.svg","components/prototype.svg","components/box.svg","components/reactimg.svg","components/taken.svg"],"names":["addModel","model","type","payload","editProp","props","Header","Modal","Body","Footer","Title","connect","dispatch","useState","showNameModal","modelName","state","setState","close","create","id","v4","name","createdAt","Date","inputChange","str","trim","IconButton","color","onClick","appearance","style","width","icon","Icon","show","onHide","maxWidth","className","Input","onPressEnter","onChange","autoFocus","placeholder","size","value","Button","ConfirmDel","showConfirmModal","closeConfirmModal","del","backdrop","fontSize","ownProps","prop","propNamesForThisModel","showPropNameModal","addProp","mode","propNameProp","propId","propName","valid","strOrArrayOfStrings","display","marginBottom","Message","showIcon","description","TagPicker","creatable","menuStyle","find","forEach","disabled","length","checkIfMobile","test","navigator","userAgent","ownProp","inputData","faker","i","modelId","func","List","Item","key","index","Grid","fluid","Row","colspan","textAlign","Col","xs","sm","md","InputPicker","findRes","val","groupName","data","defaultValue","groupBy","margin","circle","propsEl","hover","map","uuid","src","cat","alt","height","propsCount","amount","delToolTip","Tooltip","addKeyTip","generateTip","dynamicHeder","Tag","marginLeft","PanelGroup","bordered","Panel","shaded","header","Whisper","placement","trigger","speaker","atLeastOneWithoutFunc","filter","len","Alert","warning","join","res","Array","from","reduce","prev","saveAs","Blob","JSON","stringify","generate","position","paddingLeft","InputNumber","max","min","float","deleteModel","addPropName","marginTop","models","modelsEls","empty","with","showModalSave","toSave","modelsKey","checked","modelsEl","Checkbox","emptySave","rest","toSaveSet","Set","saved","parse","localStorage","getItem","has","realToSave","setItem","success","showTheModalOfModels","loadModelsEmpty","m","justAddProp","load","Divider","Controller","Generate","Navbar","Nav","HeaderComp","to","activeClassName","exact","renderItem","ContentComp","bodyFill","taken","reactimg","prototype","box","FooterComp","href","target","rel","App","path","Content","Boolean","window","location","hostname","match","initialState","randomCpy","random","dateCpy","date","objectElement","arrayElement","between","names","fullName","findName","objects","address","commerce","company","database","finance","hacker","image","internet","lorem","phone","Object","keys","funName","label","replace","charAt","toUpperCase","slice","prevArr","currArr","combineReducers","action","modelUuid","propData","idx","findIndex","findProp","without","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","store","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7995cdc7.chunk.js","sourcesContent":["import {\n  ADD_MODEL,\n  DELETE_MODEL,\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n} from './actionTypes'\n\n/**\n *\n * @param {Object} model - the model object\n * @param {string} model.name - the model name\n * @param {string} model.id - the model uuid\n * @param {Date} model.createdAt - the mode timestamp\n */\nexport const addModel = (model) => ({\n  type: ADD_MODEL,\n  payload: model,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const deleteModel = (uuid) => ({\n  type: DELETE_MODEL,\n  payload: uuid,\n})\n\n/**\n *\n * @param {Object} props - the props object\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n */\nexport const addPropName = (props) => ({\n  type: ADD_RPOP_NAME,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - object\n * @param {Object} props.id - the props id\n * @param {string} props.uuid - the model uuid\n * @param {string} props.propName - the props name\n * @param {string} props.func - the props random func\n * @param {string} props.groupName - the props groupName for the random func\n */\nexport const justAddProp = (props) => ({\n  type: JUST_ADD_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {string} uuid - the prop uuid\n *\n */\nexport const removeAllProps = (uuid) => ({\n  type: REMOVE_ALL_RPOPS,\n  payload: uuid,\n})\n\n/**\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.id - the model uuid\n * @param {string} props.newName - the new prop name\n * @param {string} props.groupName - the top lvl obj name for faker\n * @param {string} props.func - the faker function\n */\nexport const editProp = (props) => ({\n  type: EDIT_PROP,\n  payload: props,\n})\n\n/**\n *\n * @param {Object} props - the prop object\n * @param {string} props.propId - the prop uuid\n * @param {string} props.modelId - the model uuid\n */\nexport const delProp = (props) => ({\n  type: DELETE_PROP,\n  payload: props,\n})\n","export const ADD_MODEL = 'ADD_MODEL'\nexport const DELETE_MODEL = 'DELETE_MODEL'\nexport const ADD_RPOP_NAME = 'ADD_RPOP_NAME'\nexport const JUST_ADD_PROP = 'JUST_ADD_PROP'\nexport const REMOVE_ALL_RPOPS = 'REMOVE_ALL_RPOPS'\nexport const EDIT_PROP = 'EDIT_PROP'\nexport const DELETE_PROP = 'DELETE_PROP'\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Input } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { addModel } from 'redux/actions'\nimport { v4 } from 'uuid'\n\nconst { Header, Body, Footer, Title } = Modal\n\nconst AddModelBtn = ({ dispatch }) => {\n  const [state, setState] = useState({ showNameModal: false, modelName: '' })\n  const showNameModal = () => setState({ ...state, showNameModal: true })\n  const close = () => setState({ ...state, showNameModal: false })\n  const create = () => {\n    dispatch(\n      addModel({\n        id: v4(),\n        name: state.modelName,\n        createdAt: +new Date(),\n      })\n    )\n    setState({ ...state, modelName: '', showNameModal: false })\n  }\n  /**\n   * @param {string} str\n   */\n  const inputChange = (str) => setState({ ...state, modelName: str.trim('') })\n\n  const onEnter = () => {\n    inputChange(state.modelName)\n    create()\n  }\n  return (\n    <section>\n      <IconButton\n        color=\"cyan\"\n        onClick={showNameModal}\n        appearance=\"ghost\"\n        style={{ width: '100%' }}\n        icon={<Icon icon=\"plus\" />}\n      >\n        Add a model prototype\n      </IconButton>\n      <Modal\n        show={state.showNameModal}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Choose the model name</Title>\n        </Header>\n        <Body>\n          <p>Click <span className=\"note\">`Enter`</span> to create the model or \n          <span className=\"note\">`esc`</span> to close this model</p>\n          <Input\n            onPressEnter={onEnter}\n            onChange={inputChange}\n            autoFocus={true}\n            style={{ width: '100%' }}\n            placeholder=\"Your model name\"\n            size=\"lg\"\n            value={state.modelName}\n          />\n        </Body>\n        <Footer>\n          <Button onClick={create} appearance=\"primary\">\n            Create\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect()(AddModelBtn)\n","import React from 'react'\nimport { Icon, Button, Modal } from 'rsuite'\nimport { danger } from 'colors'\nconst { Body, Footer, Header, Title } = Modal\n\nconst ConfirmDel = ({ showConfirmModal, closeConfirmModal, name, del, id }) => {\n  return (\n    <Modal\n      backdrop=\"static\"\n      onHide={closeConfirmModal}\n      size=\"xs\"\n      show={showConfirmModal}\n      style={{ maxWidth: '100%' }}\n    >\n      <Header>\n        <Title>Confirm</Title>\n      </Header>\n      <Body>\n        <Icon\n          icon=\"remind\"\n          style={{\n            color: '#ffb300',\n            fontSize: 24,\n          }}\n        />\n        <b>\n          {' '}\n          Are you sure you want to delete this model {'`'}\n          <span style={{ color: danger }}>{name}</span>\n          {'`'}?\n        </b>\n      </Body>\n      <Footer>\n        <Button onClick={() => del(id)} appearance=\"primary\" color=\"red\">\n          Ok\n        </Button>\n        <Button onClick={closeConfirmModal} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default ConfirmDel\n","export const danger = '#E30712'\nexport const normal = '#00a0bd'\n","import React, { useState } from 'react'\nimport { Input, TagPicker, Button, Modal, Message } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { editProp } from 'redux/actions'\n\nconst { Body, Footer, Header, Title } = Modal\n\nconst AddProp = ({\n  showPropNameModal,\n  closeConfirmModal,\n  name,\n  addProp,\n  propNamesForThisModel,\n  id,\n  mode,\n  propNameProp,\n  dispatch,\n  propId,\n}) => {\n  const [state, setState] = useState({\n    propName: mode === 'edit' ? propNameProp : '',\n    valid: true,\n  })\n  const inputChange = (strOrArrayOfStrings) => {\n    if (mode === 'edit') {\n      setState({ propName: strOrArrayOfStrings.trim(''), valid: true })\n    } else {\n      setState({ propName: strOrArrayOfStrings, valid: true })\n    }\n  }\n  const addButtonClick = () => {\n    if (propNamesForThisModel) {\n      const exists = propNamesForThisModel.find(\n        ({ propName }) => propName === state.propName\n      )\n      if (exists) {\n        setState({ ...state, valid: false })\n        return\n      }\n    }\n    if (mode === 'edit')\n      dispatch(editProp({ propName: state.propName, id, propId }))\n    else {\n      state.propName.forEach((name) => addProp(name))\n      setState({ ...state, propName: '' })\n    }\n    closeConfirmModal()\n  }\n  const close = () => {\n    setState({ ...state, valid: true })\n    closeConfirmModal()\n  }\n  return (\n    <Modal\n      backdrop=\"static\"\n      show={showPropNameModal}\n      onHide={close}\n      style={{ maxWidth: '100%' }}\n      size=\"lg\"\n    >\n      <Header>\n        <Title>\n          {mode === 'edit'\n            ? `Edit ${propNameProp} property`\n            : 'Enter the properties names'}\n        </Title>\n      </Header>\n      <Body>\n        <div\n          style={{\n            display: state.valid ? 'none' : 'block',\n            marginBottom: '10px',\n          }}\n        >\n          <Message\n            type=\"error\"\n            showIcon\n            description={`The Property \"${state.propName}\" is already exists in this model (${name})`}\n          />\n        </div>\n        <p>\n          <b>Type the prop name then press enter to add them</b>\n        </p>\n        {mode === 'edit' ? (\n          <Input\n            style={{ width: '100%' }}\n            placeholder=\"Change prop name\"\n            onChange={inputChange}\n          />\n        ) : (\n          <TagPicker\n            creatable\n            placeholder=\"add as many properties you want here\"\n            style={{ width: '100%' }}\n            onChange={inputChange}\n            menuStyle={{ width: 300, display: 'none' }}\n          />\n        )}\n      </Body>\n      <Footer>\n        <Button\n          onClick={addButtonClick}\n          appearance=\"primary\"\n          color=\"cyan\"\n          disabled={!state.propName.length}\n        >\n          Ok\n        </Button>\n        <Button onClick={close} appearance=\"subtle\">\n          Cancel\n        </Button>\n      </Footer>\n    </Modal>\n  )\n}\n\nexport default connect((state, ownProps) => {\n  const { prop } = state\n  return { ...ownProps, propNamesForThisModel: prop[ownProps.id] }\n})(AddProp)\n","import React, { useState } from 'react'\nimport { InputPicker, List, Grid, Col, Row, Icon, IconButton } from 'rsuite'\nimport AddProp from './AddProp'\nimport { connect } from 'react-redux'\nimport { delProp, editProp } from 'redux/actions'\n\nconst checkIfMobile = () =>\n  /Mobi/.test(navigator.userAgent) || /Mobi|Android/i.test(navigator.userAgent)\n\nconst Prop = ({\n  i,\n  name,\n  id,\n  modelName,\n  modelId,\n  dispatch,\n  inputData,\n  func,\n}) => {\n  const [state, setState] = useState({ showPropNameModal: false, func })\n  const closeModal = () => setState({ ...state, showPropNameModal: false })\n  const openModal = () => setState({ ...state, showPropNameModal: true })\n  const del = () => dispatch(delProp({ propId: id, modelId }))\n  const onFuncSelect = (value) => {\n    const findRes = inputData.find(({ value: val }) => value === val)\n    if (!findRes) return\n    const { groupName } = findRes\n    setState({ ...state, func: value })\n    dispatch(editProp({ id: modelId, propId: id, func: value, groupName }))\n  }\n\n  return (\n    <List.Item key={i} index={i}>\n      <Grid fluid>\n        <Row\n          colspan={6}\n          style={{ textAlign: checkIfMobile() ? 'center' : 'left' }}\n        >\n          <Col xs={24} sm={24} md={8}>\n            <h4>\n              <Icon icon=\"circle\" /> {name}{' '}\n              {checkIfMobile() ? <Icon icon=\"circle\" /> : ''}\n            </h4>\n          </Col>\n\n          <Col xs={24} sm={24} md={10} style={{ textAlign: 'left' }}>\n            <InputPicker\n              onChange={onFuncSelect}\n              data={inputData}\n              defaultValue={state.func}\n              groupBy=\"groupName\"\n              placeholder=\"Select a function\"\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <AddProp\n            id={modelId}\n            showPropNameModal={state.showPropNameModal}\n            closeConfirmModal={closeModal}\n            propNameProp={name}\n            name={modelName}\n            propId={id}\n            mode={'edit'}\n          />\n          <Col\n            xs={12}\n            sm={12}\n            md={3}\n            style={{ textAlign: checkIfMobile() ? 'left' : 'right' }}\n          >\n            <IconButton\n              style={{ margin: '5px' }}\n              icon={<Icon icon=\"edit\" />}\n              color=\"cyan\"\n              circle\n              onClick={openModal}\n            />\n          </Col>\n\n          <Col xs={12} sm={12} md={1} style={{ textAlign: 'right' }}>\n            <IconButton\n              style={{ margin: '5px' }}\n              icon={<Icon icon=\"minus\" />}\n              color=\"red\"\n              circle\n              onClick={del}\n            />\n          </Col>\n        </Row>\n      </Grid>\n    </List.Item>\n  )\n}\n\nexport default connect((state, ownProp) => ({\n  ...ownProp,\n  inputData: state.faker,\n}))(Prop)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport cat from './cat.svg'\nimport { List } from 'rsuite'\nimport Prop from './Prop'\n\nconst PropsDisplay = ({ id, props, modelName }) => {\n  const propsEl =\n    props && props?.length > 0 ? (\n      <List hover>\n        {props.map(({ propName, id: uuid, func }, i) => (\n          <Prop\n            i={i}\n            key={i}\n            func={func}\n            name={propName}\n            id={uuid}\n            modelId={id}\n            modelName={modelName}\n          />\n        ))}\n      </List>\n    ) : (\n      <section style={{ width: '100%', textAlign: 'center' }}>\n        <h5>Add Properties to this model using the + button</h5>\n        <img src={cat} alt=\"cat waiting\" width={'100px'} height={'100px'} />\n      </section>\n    )\n  return <section>{propsEl}</section>\n}\n\nexport default connect((state, ownProps) => ({\n  ...ownProps,\n  props: state.prop[ownProps.id],\n}))(PropsDisplay)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Icon,\n  IconButton,\n  Panel,\n  PanelGroup,\n  Grid,\n  Row,\n  Col,\n  Whisper,\n  Tooltip,\n  Tag,\n  InputNumber,\n  Alert,\n} from 'rsuite'\nimport ConfirmDel from './ConfirmDel'\nimport PropsDisplay from './PropsDisplay'\nimport AddProp from './AddProp'\nimport * as faker from 'faker'\nimport { saveAs } from 'file-saver'\n\nimport { deleteModel, addPropName, removeAllProps } from 'redux/actions'\n\nconst Model = ({ dispatch, model: { id, name }, propsCount, props }) => {\n  const [state, setState] = useState({\n    showConfirmModal: false,\n    showPropNameModal: false,\n    amount: 10,\n  })\n  const delToolTip = (\n    <Tooltip>\n      Click here to <b>Delete</b> this model {'`'}\n      {name}\n      {'`'}.\n    </Tooltip>\n  )\n  const addKeyTip = <Tooltip>Click here to add an attribute.</Tooltip>\n  const generateTip = (\n    <Tooltip>\n      Click here to <b>generate</b> a json for this model.\n    </Tooltip>\n  )\n  const closeConfirmModal = () =>\n    setState({ ...state, showConfirmModal: false, showPropNameModal: false })\n  const openConfirmModal = () => setState({ ...state, showConfirmModal: true })\n  const openPropNameModal = () =>\n    setState({ ...state, showConfirmModal: false, showPropNameModal: true })\n\n  const del = (id) => {\n    closeConfirmModal()\n    dispatch(removeAllProps(id))\n    dispatch(deleteModel(id))\n  }\n\n  const changeAmount = (val) => setState({ ...state, amount: +val })\n\n  const generate = () => {\n    if (!props) {\n      Alert.warning(`plz add some properties to this model (${name})`)\n      return\n    }\n    const atLeastOneWithoutFunc = props\n      .filter(({ func }) => !func)\n      .map(({ propName }) => propName)\n    const len = atLeastOneWithoutFunc.length\n    if (len > 0) {\n      Alert.warning(\n        `There is ${len} ${\n          len === 1 ? 'property' : 'properties'\n        } without function ${atLeastOneWithoutFunc.join(' || ')}`\n      )\n      return\n    }\n    const res = Array.from({ length: state.amount }).map(() => {\n      return props.reduce(\n        (prev, { propName, groupName, func }) => ({\n          ...prev,\n          [propName]: faker[groupName][\n            func === 'fullName' ? 'findName' : func\n          ](),\n        }),\n        {}\n      )\n    })\n    saveAs(\n      new Blob([JSON.stringify(res, null, 2)], { type: 'application/json' }),\n      name\n    )\n  }\n\n  const addProp = (name) => dispatch(addPropName({ propName: name, uuid: id }))\n  const dynamicHeder = (\n    <div>\n      Model name {name}\n      {\n        <Tag color=\"cyan\" style={{ marginLeft: '5px' }}>\n          {propsCount}\n        </Tag>\n      }\n    </div>\n  )\n  return (\n    <section>\n      <PanelGroup bordered>\n        <Panel shaded header={dynamicHeder}>\n          <Grid fluid>\n            <Row>\n              <Col xs={24} sm={24} md={24}>\n                <Whisper placement=\"right\" trigger=\"hover\" speaker={addKeyTip}>\n                  <IconButton\n                    icon={<Icon icon=\"plus\" />}\n                    color=\"cyan\"\n                    circle\n                    onClick={openPropNameModal}\n                  />\n                </Whisper>\n                <Whisper\n                  placement=\"right\"\n                  trigger=\"hover\"\n                  speaker={generateTip}\n                >\n                  <IconButton\n                    style={{ marginLeft: '5px' }}\n                    icon={<Icon icon=\"magic2\" />}\n                    color=\"orange\"\n                    circle\n                    onClick={() => generate()}\n                  />\n                </Whisper>\n                <div\n                  style={{\n                    width: 80,\n                    display: 'inline',\n                    position: 'absolute',\n                    paddingLeft: 10,\n                  }}\n                >\n                  <InputNumber\n                    defaultValue={10}\n                    max={1000}\n                    min={1}\n                    onChange={changeAmount}\n                  />\n                </div>\n                <Whisper placement=\"left\" trigger=\"hover\" speaker={delToolTip}>\n                  <IconButton\n                    icon={<Icon icon=\"minus\" />}\n                    style={{ float: 'right' }}\n                    color=\"red\"\n                    circle\n                    onClick={openConfirmModal}\n                  />\n                </Whisper>\n                <ConfirmDel\n                  id={id}\n                  del={del}\n                  closeConfirmModal={closeConfirmModal}\n                  name={name}\n                  showConfirmModal={state.showConfirmModal}\n                />\n                <AddProp\n                  id={id}\n                  showPropNameModal={state.showPropNameModal}\n                  closeConfirmModal={closeConfirmModal}\n                  name={name}\n                  addProp={addProp}\n                />\n              </Col>\n              <Col\n                xs={24}\n                sm={24}\n                md={24}\n                style={{ textAlign: 'right', marginTop: '10px' }}\n              >\n                <PropsDisplay id={id} modelName={name} />\n              </Col>\n            </Row>\n          </Grid>\n        </Panel>\n      </PanelGroup>\n    </section>\n  )\n}\n\nexport default connect((state, ownProps) => ({\n  ...ownProps,\n  propsCount: (state.prop[ownProps.model.id] || []).length,\n  props: state.prop[ownProps.model.id],\n}))(Model)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Panel, PanelGroup } from 'rsuite'\nimport empty from './empty.svg'\nimport Model from './ModelsComponents/Model'\n\nconst Models = ({ models }) => {\n  const modelsEls =\n    models.length > 0 ? (\n      models.map((model, i) => <Model model={model} key={i} />)\n    ) : (\n      <Panel\n        bordered\n        header=\"Add models to start!\"\n        style={{ textAlign: 'center' }}\n      >\n        <img src={empty} with={'100%'} height={'200px'} alt=\"empty-img\" />\n      </Panel>\n    )\n  return (\n    <section>\n      <PanelGroup>{modelsEls}</PanelGroup>\n    </section>\n  )\n}\n\nexport default connect((models) => models)(Models)\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Checkbox } from 'rsuite'\nimport { connect } from 'react-redux'\nimport emptySave from './emptySave.svg'\nimport { Alert } from 'rsuite'\nconst { Header, Body, Footer, Title } = Modal\n\nconst SaveModel = ({ models, prop }) => {\n  const [state, setState] = useState({\n    showModalSave: false,\n    toSave: [],\n    modelsKey: 'models',\n  })\n  const showModalSave = () =>\n    setState({ ...state, toSave: [], showModalSave: true })\n  const close = () => setState({ ...state, showModalSave: false })\n  const save = () => {\n    const toSave = models.map(({ id, ...rest }) => ({\n      props: prop[id],\n      id,\n      ...rest,\n    }))\n    const toSaveSet = new Set(toSave.map(({ id }) => id))\n    // to preserve the old models and override if the user changed the same one!\n    const saved = (\n      JSON.parse(localStorage.getItem(state.modelsKey)) || []\n    ).filter(({ id }) => !toSaveSet.has(id))\n    const realToSave = [...saved, ...toSave]\n    localStorage.setItem(state.modelsKey, JSON.stringify(realToSave))\n    Alert.success(\n      `Saved models [ ${toSave.map(({ name }) => name).join(' || ')} ]`\n    )\n  }\n  const toSave = (model, checked) => {\n    if (checked) {\n      setState({ ...state, toSave: [...state.toSave, model] })\n    } else {\n      setState({\n        ...state,\n        toSave: [...state.toSave.filter(({ id }) => id !== model.id)],\n      })\n    }\n  }\n  const modelsEl = models.length ? (\n    models.map(({ name, id }) => (\n      <Checkbox name={name} onChange={toSave} key={id} value={{ name, id }}>\n        {name}\n      </Checkbox>\n    ))\n  ) : (\n    <div style={{ textAlign: 'center' }}>\n      <img src={emptySave} height=\"100\" width={'100%'} alt=\"no models img\" />\n      <p>You need to create some models to save them </p>\n    </div>\n  )\n  return (\n    <section style={{ display: 'inline' }}>\n      <IconButton\n        color=\"cyan\"\n        onClick={showModalSave}\n        circle\n        icon={<Icon icon=\"save\" />}\n      />\n      <Modal\n        show={state.showModalSave}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>You can save a model here, then load it</Title>\n        </Header>\n        <Body>{modelsEl}</Body>\n        <Footer>\n          <Button\n            onClick={save}\n            appearance=\"primary\"\n            disabled={models.length === 0}\n          >\n            Save\n          </Button>\n          <Button onClick={close} appearance=\"subtle\">\n            Cancel\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models, prop }, ownProps) => ({\n  ...ownProps,\n  models,\n  prop,\n}))(SaveModel)\n","import React, { useState } from 'react'\nimport { IconButton, Icon, Modal, Button, Divider } from 'rsuite'\nimport { connect } from 'react-redux'\nimport { Alert } from 'rsuite'\nimport loadModelsEmpty from './loadModels.svg'\nimport { addModel, justAddProp } from 'redux/actions'\nconst { Header, Body, Footer, Title } = Modal\n\nconst LoadModel = ({ dispatch, models }) => {\n  const [state, setState] = useState({\n    showTheModalOfModels: false,\n    models: [],\n  })\n  const close = () => setState({ ...state, showTheModalOfModels: false })\n  const open = () =>\n    setState({\n      ...state,\n      showTheModalOfModels: true,\n      models: JSON.parse(localStorage.getItem('models')) || [],\n    })\n  const load = ({ id, name, createdAt, ...props }) => {\n    // check if we already loaded the model\n    if ((models.find(({ id: modelId }) => id === modelId) || []).length === 0) {\n      dispatch(addModel({ id, name, createdAt }))\n      dispatch(justAddProp({ uuid: id, ...props }))\n    } else {\n      Alert.warning(`We already loaded ${name} - id[${id}]`)\n    }\n  }\n  return (\n    <section style={{ display: 'inline', marginLeft: 10 }}>\n      <IconButton\n        color=\"yellow\"\n        onClick={open}\n        circle\n        icon={<Icon icon=\"tasks\" />}\n      />\n      <Modal\n        show={state.showTheModalOfModels}\n        onHide={close}\n        style={{ maxWidth: '100%' }}\n      >\n        <Header>\n          <Title>Load your saved models!</Title>\n        </Header>\n        <Body>\n          {state.models.length === 0 ? (\n            <div style={{ textAlign: 'center' }}>\n              <img\n                src={loadModelsEmpty}\n                height=\"240\"\n                width={'100%'}\n                alt=\"empty models\"\n              />\n              <p>Your saved models will appear here!</p>\n            </div>\n          ) : (\n            state.models.map((m, i) => (\n              <div key={i}>\n                <h3>\n                  <strong>{m.name}</strong>\n                </h3>\n                <Button\n                  style={{ float: 'right' }}\n                  appearance=\"ghost\"\n                  onClick={() => load(m)}\n                >\n                  Click to Load {m.name}\n                </Button>\n                <pre>{JSON.stringify(m, null, 2)}</pre>\n                <Divider />\n              </div>\n            ))\n          )}\n        </Body>\n        <Footer>\n          <Button onClick={close} appearance=\"subtle\">\n            Close\n          </Button>\n        </Footer>\n      </Modal>\n    </section>\n  )\n}\n\nexport default connect(({ models }, ownProps) => ({\n  ...ownProps,\n  models,\n}))(LoadModel)\n","import React from 'react'\nimport { Grid, Row, Col } from 'rsuite'\n// import { IconButton, Icon } from 'rsuite'\nimport { AddModelBtn, Models, SaveModel, LoadModel } from './components'\nfunction Controller() {\n  // const [state, setState] = useState()\n  return (\n    <Grid fluid>\n      <Row>\n        <Col xs={24} sm={24} md={6}>\n          <AddModelBtn />\n          <div style={{ marginTop: '10px' }}>\n            <SaveModel />\n            <LoadModel />\n          </div>\n        </Col>\n        <Col xs={24} sm={24} md={18}>\n          <Models />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default Controller\n","import React from 'react'\nimport { Controller } from './components'\nimport { Grid, Row, Col } from 'rsuite'\n\nfunction Generate() {\n  // const [state, setState] = useState()\n  return (\n    <Grid fluid>\n      <Row style={{ margin: '1rem' }}>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: '20px' }}>\n          <Controller />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default Generate\n","import React from 'react'\nimport { Navbar, Nav, Icon } from 'rsuite'\nimport { NavLink } from 'react-router-dom'\nconst { Body } = Navbar\nconst { Item } = Nav\n\nfunction HeaderComp() {\n  return (\n    <Navbar>\n      <Body>\n        <Nav>\n          <NavLink to=\"/\" activeClassName=\"active-route\" exact={true}>\n            <Item\n              renderItem={() => (\n                <span className=\"rs-nav-item-content\">\n                  <Icon icon=\"home\" /> Pollux\n                </span>\n              )}\n            ></Item>\n          </NavLink>\n          <NavLink to=\"/generate\" activeClassName=\"active-route\">\n            <Item\n              renderItem={() => (\n                <span className=\"rs-nav-item-content\">\n                  <Icon icon=\"magic2\" />\n                  Generate\n                </span>\n              )}\n            >\n              About\n            </Item>\n          </NavLink>\n        </Nav>\n        {/* <Nav pullRight>\n          <Item icon={<Icon icon=\"cog\" />}>Settings</Item>\n        </Nav> */}\n      </Body>\n    </Navbar>\n  )\n}\n\nexport default HeaderComp\n","import React from 'react'\nimport { Grid, Row, Col, Panel } from 'rsuite'\nimport prototype from './prototype.svg'\nimport box from './box.svg'\nimport reactimg from './reactimg.svg'\nimport taken from './taken.svg'\n\nconst ContentComp = () => {\n  return (\n    <section>\n      <Grid fluid className=\"site-layout-content\">\n        <Row>\n          <Col xs={24} sm={24} md={12}>\n            <Panel\n              shaded\n              bordered\n              bodyFill\n              style={{ display: 'inline-block', width: '100%' }}\n            >\n              <img src={taken} height=\"240\" width={'100%'} alt=\"taken\" />\n              <Panel header=\"POLLUX\">\n                <p>Welcome to Pollux - The app that generate fake data</p>\n              </Panel>\n            </Panel>\n          </Col>\n          <Col xs={24} sm={24} md={12}>\n            <Panel\n              shaded\n              bordered\n              bodyFill\n              style={{ display: 'inline-block', width: '100%' }}\n            >\n              <img\n                src={reactimg}\n                height=\"240\"\n                width={'100%'}\n                alt=\"react\n              \"\n              />\n              <Panel header=\"Built via\">\n                <p>Built with React.js &#38; Redux</p>\n              </Panel>\n            </Panel>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={24} sm={24} md={12}>\n            <Panel\n              shaded\n              bordered\n              bodyFill\n              style={{ display: 'inline-block', width: '100%' }}\n            >\n              <img\n                src={prototype}\n                height=\"240\"\n                width={'100%'}\n                alt=\"prototype\"\n              />\n              <Panel header=\"Prototype\">\n                <p>Define prototypes and their properties</p>\n              </Panel>\n            </Panel>\n          </Col>\n          <Col xs={24} sm={24} md={12}>\n            <Panel\n              shaded\n              bordered\n              bodyFill\n              style={{ display: 'inline-block', width: '100%' }}\n            >\n              <img\n                src={box}\n                height=\"240\"\n                width={'100%'}\n                alt=\"box\n              \"\n              />\n              <Panel header=\"Generate\">\n                <p>Generate fake data based on your prototypes</p>\n              </Panel>\n            </Panel>\n          </Col>\n        </Row>\n      </Grid>\n    </section>\n  )\n}\n\nexport default ContentComp\n","import React from 'react'\nimport { IconButton, Icon } from 'rsuite'\n\nconst FooterComp = () => {\n  return (\n    <section style={{ textAlign: 'center' }}>\n      Made by <b>Rowad</b>{' '}\n      <a\n        href=\"https://github.com/MohammedAl-Rowad\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"linkedin-square\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://www.linkedin.com/in/mohammed-al-rowad/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"github-alt\" />} />\n      </a>\n      {'  '}\n      <a\n        href=\"https://www.youtube.com/channel/UC1Uw_GN4sodGisimwZNzMoA?view_as=subscriber\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <IconButton size=\"xs\" icon={<Icon icon=\"youtube-play\" />} />\n      </a>\n    </section>\n  )\n}\n\nexport default FooterComp\n","import React from 'react'\nimport 'rsuite/dist/styles/rsuite-dark.css'\nimport './App.css'\nimport { Header, Content, Footer, Generate } from './components/'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Route path=\"/\" exact={true}>\n        <main>\n          <Content />\n          <Footer />\n        </main>\n      </Route>\n      <Route path=\"/generate\">\n        <Generate />\n        <Footer />\n      </Route>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_MODEL, DELETE_MODEL } from '../actionTypes'\n\nconst initialState = []\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_MODEL: {\n      return [...state, { ...action.payload }]\n    }\n    case DELETE_MODEL: {\n      const { payload: uuid } = action\n      return state.filter(({ id }) => id !== uuid)\n    }\n    default:\n      return state\n  }\n}\n","import {\n  random,\n  name,\n  address,\n  commerce,\n  company,\n  database,\n  date,\n  finance,\n  hacker,\n  image,\n  internet,\n  lorem,\n  phone,\n} from 'faker'\n\nconst randomCpy = { ...random }\nconst dateCpy = { ...date }\ndelete randomCpy.objectElement\ndelete randomCpy.arrayElement\ndelete dateCpy.between\n\nconst names = { ...name }\nnames.fullName = name.findName\ndelete names.findName\nconst objects = {\n  random: randomCpy,\n  name: names,\n  address,\n  commerce,\n  company,\n  database,\n  date: dateCpy,\n  finance,\n  hacker,\n  image,\n  internet,\n  lorem,\n  phone,\n}\n\nconst initialState = Object.keys(objects)\n  .map((name) =>\n    Object.keys(objects[name]).map((funName) => ({\n      groupName: name,\n      label: (() => {\n        const res = funName.replace(/([A-Z])/g, ' $1')\n        return `${res.charAt(0).toUpperCase()}${res.slice(1)}`\n      })(),\n      value: funName,\n    }))\n  )\n  .reduce((prevArr, currArr) => [...prevArr, ...currArr], [])\n\nexport default function (state = initialState, action) {\n  return state\n}\n","import {\n  ADD_RPOP_NAME,\n  REMOVE_ALL_RPOPS,\n  EDIT_PROP,\n  DELETE_PROP,\n  JUST_ADD_PROP,\n} from '../actionTypes'\nimport { v4 } from 'uuid'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_RPOP_NAME: {\n      const { uuid, propName } = action.payload\n      return {\n        ...state,\n        [uuid]: [...(state[uuid] || []), { propName, id: v4() }],\n      }\n    }\n    case JUST_ADD_PROP: {\n      const { uuid: modelUuid, props } = action.payload\n      return {\n        ...state,\n        [modelUuid]: props,\n      }\n    }\n    case REMOVE_ALL_RPOPS: {\n      const uuid = action.payload\n      delete state[uuid]\n      return { ...state }\n    }\n    case EDIT_PROP: {\n      const { id: modelUuid, propId, ...propData } = action.payload\n      // we need to save it in its orignal place\n      const idx = state[modelUuid].findIndex(({ id }) => id === propId)\n      const findProp = {\n        ...state[modelUuid].find(({ id }) => id === propId),\n        ...propData,\n      }\n\n      if (!propData.func && !findProp.func) delete findProp.func\n      const without = state[modelUuid].filter(({ id }) => id !== propId)\n      return {\n        ...state,\n        [modelUuid]: [\n          ...without.slice(0, idx),\n          findProp,\n          ...without.slice(idx),\n        ],\n      }\n    }\n    case DELETE_PROP: {\n      const { modelId, propId } = action.payload\n      return {\n        ...state,\n        [modelId]: [...state[modelId].filter(({ id }) => id !== propId)],\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport models from './models.reducer'\nimport faker from './faker.reducer'\nimport prop from './prop.reducer'\n\nexport default combineReducers({ models, faker, prop })\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nexport default createStore(rootReducer, composeWithDevTools())\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Pollux from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n// console.log(store.getState())\n// store.subscribe(() => console.log(store.getState()))\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Pollux />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/empty.7448158e.svg\";","module.exports = __webpack_public_path__ + \"static/media/cat.4333af26.svg\";","module.exports = __webpack_public_path__ + \"static/media/emptySave.10032122.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadModels.a2b0ac77.svg\";","module.exports = __webpack_public_path__ + \"static/media/prototype.ea2fca44.svg\";","module.exports = __webpack_public_path__ + \"static/media/box.d0bcb7b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/reactimg.e333d532.svg\";","module.exports = __webpack_public_path__ + \"static/media/taken.0151e99f.svg\";"],"sourceRoot":""}